<?xml version="1.0" encoding="utf-8"?>
<assemblies timestamp="02/28/2017 19:51:53">
  <assembly name="C:\projects\planner\Planner.Tests\bin\Debug\net462\Planner.Tests.EXE" environment="32-bit .NET 4.0.30319.42000 [collection-per-class, parallel (2 threads)]" test-framework="xUnit.net 2.2.0.3474" run-date="2017-02-28" run-time="19:51:49" config-file="C:\projects\planner\Planner.Tests\bin\Debug\net462\Planner.Tests.exe.config" total="101" passed="101" failed="0" skipped="0" time="3.518" errors="0">
    <errors />
    <collection total="9" passed="9" failed="0" skipped="0" name="Test collection for Planner.Tests.Controllers.Api.ExpectedIncidentsControllerTests" time="0.993">
      <test name="Planner.Tests.Controllers.Api.ExpectedIncidentsControllerTests.PatchInvalidItemIdReturnsNotFound(id: 95)" type="Planner.Tests.Controllers.Api.ExpectedIncidentsControllerTests" method="PatchInvalidItemIdReturnsNotFound" time="foo.bar" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.ExpectedIncidentsControllerTests.PostInvalidEventIdCallsServiceAndReturnsBadRequest(eventId: 162, createModel: ExpectedIncidentCreate { Name = \&quot;Namebc1c0070-1fbd-4832-9dc1-a3f20c1aa148\&quot; })" type="Planner.Tests.Controllers.Api.ExpectedIncidentsControllerTests" method="PostInvalidEventIdCallsServiceAndReturnsBadRequest" time="0.0170589" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.ExpectedIncidentsControllerTests.PostValidEventIdCallsServiceAndReturnsCreated(eventId: 212, createModel: ExpectedIncidentCreate { Name = \&quot;Name791e93d8-cc5a-4d42-8538-61541ea99f25\&quot; }, newId: 119)" type="Planner.Tests.Controllers.Api.ExpectedIncidentsControllerTests" method="PostValidEventIdCallsServiceAndReturnsCreated" time="0.0648828" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.ExpectedIncidentsControllerTests.GetItemInvalidIdReturnsNotFound(id: 57)" type="Planner.Tests.Controllers.Api.ExpectedIncidentsControllerTests" method="GetItemInvalidIdReturnsNotFound" time="0.0019845" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.ExpectedIncidentsControllerTests.DeleteItemReturnsNoContent(id: 57)" type="Planner.Tests.Controllers.Api.ExpectedIncidentsControllerTests" method="DeleteItemReturnsNoContent" time="0.0030817" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.ExpectedIncidentsControllerTests.PatchInvalidItemReturnsBadRequest(id: 57, model: ExpectedIncident { Id = 168, Name = \&quot;Name97fe140f-4c68-4835-b01d-a43a47ccd730\&quot; })" type="Planner.Tests.Controllers.Api.ExpectedIncidentsControllerTests" method="PatchInvalidItemReturnsBadRequest" time="0.3556847" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.ExpectedIncidentsControllerTests.PatchValidItemReturnsUpdatedDetails(id: 75, model: ExpectedIncident { Id = 74, Name = \&quot;Name3eeb790c-6de6-4ea7-86f0-0ed4c0191a3b\&quot; })" type="Planner.Tests.Controllers.Api.ExpectedIncidentsControllerTests" method="PatchValidItemReturnsUpdatedDetails" time="0.0132398" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.ExpectedIncidentsControllerTests.GetItemValidIdReturnsOk(id: 34, item: ExpectedIncident { Id = 176, Name = \&quot;Name6769d2df-83be-4755-9645-ca882a389e8f\&quot; })" type="Planner.Tests.Controllers.Api.ExpectedIncidentsControllerTests" method="GetItemValidIdReturnsOk" time="0.0016773" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.ExpectedIncidentsControllerTests.PostInvalidItemDoesNotCallServiceAndReturnsBadRequest(eventId: 34, createModel: ExpectedIncidentCreate { Name = \&quot;Namedb30f665-7017-467d-9914-ee004776264c\&quot; })" type="Planner.Tests.Controllers.Api.ExpectedIncidentsControllerTests" method="PostInvalidItemDoesNotCallServiceAndReturnsBadRequest" time="0.0014343" result="Pass" />
    </collection>
    <collection total="9" passed="9" failed="0" skipped="0" name="Test collection for Planner.Tests.Controllers.Api.ScheduleItemsControllerTests" time="0.992">
      <test name="Planner.Tests.Controllers.Api.ScheduleItemsControllerTests.PostInvalidEventIdCallsServiceAndReturnsBadRequest(eventId: 95, createModel: ScheduleItemCreate { Action = \&quot;Actiondb08d7ee-1ee5-4c33-af44-5b2b2c2ebf47\&quot;, Time = 00:00:00.0000025 })" type="Planner.Tests.Controllers.Api.ScheduleItemsControllerTests" method="PostInvalidEventIdCallsServiceAndReturnsBadRequest" time="0.5327094" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.ScheduleItemsControllerTests.DeleteItemReturnsNoContent(id: 162)" type="Planner.Tests.Controllers.Api.ScheduleItemsControllerTests" method="DeleteItemReturnsNoContent" time="0.0238532" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.ScheduleItemsControllerTests.GetItemInvalidIdReturnsNotFound(id: 121)" type="Planner.Tests.Controllers.Api.ScheduleItemsControllerTests" method="GetItemInvalidIdReturnsNotFound" time="0.0147211" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.ScheduleItemsControllerTests.PatchInvalidItemIdReturnsNotFound(id: 212)" type="Planner.Tests.Controllers.Api.ScheduleItemsControllerTests" method="PatchInvalidItemIdReturnsNotFound" time="0.0032208" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.ScheduleItemsControllerTests.PostValidEventIdCallsServiceAndReturnsCreated(eventId: 212, createModel: ScheduleItemCreate { Action = \&quot;Action173a912f-3af0-412e-ba25-d53a86977769\&quot;, Time = 00:00:00.0000119 }, newId: 172)" type="Planner.Tests.Controllers.Api.ScheduleItemsControllerTests" method="PostValidEventIdCallsServiceAndReturnsCreated" time="0.0749713" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.ScheduleItemsControllerTests.GetItemValidIdReturnsOk(id: 148, item: ScheduleItem { Action = \&quot;Actionf874c406-61f4-45bd-be20-aeb38651cc6d\&quot;, Id = 90, Time = 00:00:00.0000050 })" type="Planner.Tests.Controllers.Api.ScheduleItemsControllerTests" method="GetItemValidIdReturnsOk" time="0.0094664" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.ScheduleItemsControllerTests.PatchInvalidItemReturnsBadRequest(id: 240, model: ScheduleItem { Action = \&quot;Action4ae188bd-0d57-4b3b-b20e-606cd28b6bb1\&quot;, Id = 12, Time = 00:00:00.0000097 })" type="Planner.Tests.Controllers.Api.ScheduleItemsControllerTests" method="PatchInvalidItemReturnsBadRequest" time="0.325264" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.ScheduleItemsControllerTests.PatchValidItemReturnsUpdatedDetails(id: 34, model: ScheduleItem { Action = \&quot;Actiondf5ef6dd-e069-4219-8a31-5e80cf3a4a19\&quot;, Id = 176, Time = 00:00:00.0000096 })" type="Planner.Tests.Controllers.Api.ScheduleItemsControllerTests" method="PatchValidItemReturnsUpdatedDetails" time="0.0054094" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.ScheduleItemsControllerTests.PostInvalidItemDoesNotCallServiceAndReturnsBadRequest(eventId: 34, createModel: ScheduleItemCreate { Action = \&quot;Actionc8478b98-09fc-48a1-81da-b2505dc1796a\&quot;, Time = 00:00:00.0000176 })" type="Planner.Tests.Controllers.Api.ScheduleItemsControllerTests" method="PostInvalidItemDoesNotCallServiceAndReturnsBadRequest" time="0.0021794" result="Pass" />
    </collection>
    <collection total="10" passed="10" failed="0" skipped="0" name="Test collection for Planner.Tests.Controllers.Api.EventControllerTests" time="0.151">
      <test name="Planner.Tests.Controllers.Api.EventControllerTests.DeleteItemReturnsNoContent(id: 175)" type="Planner.Tests.Controllers.Api.EventControllerTests" method="DeleteItemReturnsNoContent" time="0.013334" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.EventControllerTests.PatchValidItemReturnsUpdatedDetails(id: 11, model: Event { AmbulancesAvailable = 45, BriefingNotesSent = True, ControlPhoneNumber = \&quot;ControlPhoneNumber9c853f75-cb8e-4e78-8a9b-530ce772\&quot;..., Created = 2017-01-09T19:43:24.2899212, CreatedBy = \&quot;CreatedBycaa870c6-a767-48bc-8e0b-6ffca9606c07\&quot;, ... })" type="Planner.Tests.Controllers.Api.EventControllerTests" method="PatchValidItemReturnsUpdatedDetails" time="0.0445923" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.EventControllerTests.PostInvalidItemDoesNotCallServiceAndReturnsBadRequest(createModel: EventCreate { CyclistsRequested = 252, Date = 2017-03-31T02:16:44.3091603, DateConfirmed = True, DipsNumber = 40, EndTime = 00:00:00.0000092, ... })" type="Planner.Tests.Controllers.Api.EventControllerTests" method="PostInvalidItemDoesNotCallServiceAndReturnsBadRequest" time="0.0034619" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.EventControllerTests.PatchInvalidItemIdReturnsNotFound(id: 89)" type="Planner.Tests.Controllers.Api.EventControllerTests" method="PatchInvalidItemIdReturnsNotFound" time="0.0019333" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.EventControllerTests.GetAllReturnsEventSummaries(events: [Event { AmbulancesAvailable = 89, BriefingNotesSent = True, ControlPhoneNumber = \&quot;ControlPhoneNumberad811470-6cfc-4114-b96c-f5c52e69\&quot;..., Created = 2016-03-07T23:00:46.0904012, CreatedBy = \&quot;CreatedBy0c43eb98-2ef4-408c-a4eb-2f7de97af989\&quot;, ... }, Event { AmbulancesAvailable = 97, BriefingNotesSent = True, ControlPhoneNumber = \&quot;ControlPhoneNumber04bc1a24-1597-4fcb-a3bc-9812d84a\&quot;..., Created = 2015-12-29T20:47:32.2553912, CreatedBy = \&quot;CreatedBy237121f0-f347-434e-b299-833bd21bd13a\&quot;, ... }, Event { AmbulancesAvailable = 7, BriefingNotesSent = True, ControlPhoneNumber = \&quot;ControlPhoneNumber66949f02-b161-415d-a7ed-f1be1380\&quot;..., Created = 2018-12-17T21:28:46.8189118, CreatedBy = \&quot;CreatedBy0e7174ac-6526-457f-b3bc-8bd2fc9cf290\&quot;, ... }])" type="Planner.Tests.Controllers.Api.EventControllerTests" method="GetAllReturnsEventSummaries" time="0.0490385" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.EventControllerTests.GetAllIncludingHistoricReturnsEventSummaries(events: [Event { AmbulancesAvailable = 25, BriefingNotesSent = True, ControlPhoneNumber = \&quot;ControlPhoneNumber64d4a362-4f88-43a7-808f-6f83ec7c\&quot;..., Created = 2018-10-16T02:04:19.0318479, CreatedBy = \&quot;CreatedBy6853859a-7e31-40d6-90d7-7e30f44b40be\&quot;, ... }, Event { AmbulancesAvailable = 85, BriefingNotesSent = True, ControlPhoneNumber = \&quot;ControlPhoneNumber8fb9c4eb-7d9d-46ff-bba5-0c2eca1f\&quot;..., Created = 2018-06-25T20:39:41.5225428, CreatedBy = \&quot;CreatedBy5fc981eb-1b51-49b6-8bd3-67ee4ad250bd\&quot;, ... }, Event { AmbulancesAvailable = 237, BriefingNotesSent = True, ControlPhoneNumber = \&quot;ControlPhoneNumber24232c78-52fd-4609-bd06-8c0e623c\&quot;..., Created = 2016-09-20T01:25:52.7690420, CreatedBy = \&quot;CreatedBy4cc00826-8edc-4ce2-8dce-f8ec9c42dc88\&quot;, ... }])" type="Planner.Tests.Controllers.Api.EventControllerTests" method="GetAllIncludingHistoricReturnsEventSummaries" time="0.0099204" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.EventControllerTests.PostValidModelCallsServiceAndReturnsCreated(createModel: EventCreate { CyclistsRequested = 166, Date = 2019-02-11T08:37:36.2720396, DateConfirmed = True, DipsNumber = 135, EndTime = 00:00:00.0000234, ... }, newId: 170)" type="Planner.Tests.Controllers.Api.EventControllerTests" method="PostValidModelCallsServiceAndReturnsCreated" time="0.0120126" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.EventControllerTests.GetItemValidIdReturnsOk(id: 2, item: Event { AmbulancesAvailable = 57, BriefingNotesSent = True, ControlPhoneNumber = \&quot;ControlPhoneNumber4288a760-d7b4-4baa-b7a5-29f73ac3\&quot;..., Created = 2018-12-12T06:39:06.8937029, CreatedBy = \&quot;CreatedBy0309a49a-c72d-4937-9b7a-d0986f363e2a\&quot;, ... })" type="Planner.Tests.Controllers.Api.EventControllerTests" method="GetItemValidIdReturnsOk" time="0.0021542" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.EventControllerTests.PatchInvalidItemReturnsBadRequest(id: 216, model: Event { AmbulancesAvailable = 160, BriefingNotesSent = True, ControlPhoneNumber = \&quot;ControlPhoneNumbera69e4dcd-f6ab-4257-b55a-c0b10d86\&quot;..., Created = 2017-05-26T11:40:19.7675217, CreatedBy = \&quot;CreatedBy3ee27817-2f54-42fc-8812-f717631d943d\&quot;, ... })" type="Planner.Tests.Controllers.Api.EventControllerTests" method="PatchInvalidItemReturnsBadRequest" time="0.0132469" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.EventControllerTests.GetItemInvalidIdReturnsNotFound(id: 10)" type="Planner.Tests.Controllers.Api.EventControllerTests" method="GetItemInvalidIdReturnsNotFound" time="0.0017446" result="Pass" />
    </collection>
    <collection total="9" passed="9" failed="0" skipped="0" name="Test collection for Planner.Tests.Controllers.Api.NotesControllerTests" time="0.089">
      <test name="Planner.Tests.Controllers.Api.NotesControllerTests.GetItemInvalidIdReturnsNotFound(id: 175)" type="Planner.Tests.Controllers.Api.NotesControllerTests" method="GetItemInvalidIdReturnsNotFound" time="0.0364449" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.NotesControllerTests.PostValidEventIdCallsServiceAndReturnsCreated(eventId: 103, createModel: NoteCreate { SortNumber = 222, Text = \&quot;Text7d706f52-1547-4eba-a2d1-a27bd0825298\&quot; }, newId: 90)" type="Planner.Tests.Controllers.Api.NotesControllerTests" method="PostValidEventIdCallsServiceAndReturnsCreated" time="0.0153776" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.NotesControllerTests.PostInvalidEventIdCallsServiceAndReturnsBadRequest(eventId: 153, createModel: NoteCreate { SortNumber = 246, Text = \&quot;Text0d71b140-45f4-4e21-ac18-5cad01e4bc1d\&quot; })" type="Planner.Tests.Controllers.Api.NotesControllerTests" method="PostInvalidEventIdCallsServiceAndReturnsBadRequest" time="0.002396" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.NotesControllerTests.GetItemValidIdReturnsOk(id: 153, item: Note { Id = 246, SortNumber = 6, Text = \&quot;Text0fcd2ac4-064c-464d-bccf-5cd5e141be53\&quot; })" type="Planner.Tests.Controllers.Api.NotesControllerTests" method="GetItemValidIdReturnsOk" time="0.0166675" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.NotesControllerTests.PatchValidItemReturnsUpdatedDetails(id: 111, model: Note { Id = 94, SortNumber = 129, Text = \&quot;Text98ef0eed-4e37-4a7c-9a5c-5bbbaec83889\&quot; })" type="Planner.Tests.Controllers.Api.NotesControllerTests" method="PatchValidItemReturnsUpdatedDetails" time="0.0112844" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.NotesControllerTests.DeleteItemReturnsNoContent(id: 202)" type="Planner.Tests.Controllers.Api.NotesControllerTests" method="DeleteItemReturnsNoContent" time="0.0021208" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.NotesControllerTests.PostInvalidItemDoesNotCallServiceAndReturnsBadRequest(eventId: 202, createModel: NoteCreate { SortNumber = 16, Text = \&quot;Texte084892b-0149-447e-8704-d298fff04c0f\&quot; })" type="Planner.Tests.Controllers.Api.NotesControllerTests" method="PostInvalidItemDoesNotCallServiceAndReturnsBadRequest" time="0.0002666" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.NotesControllerTests.PatchInvalidItemIdReturnsNotFound(id: 202)" type="Planner.Tests.Controllers.Api.NotesControllerTests" method="PatchInvalidItemIdReturnsNotFound" time="0.0016986" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.NotesControllerTests.PatchInvalidItemReturnsBadRequest(id: 202, model: Note { Id = 16, SortNumber = 176, Text = \&quot;Text2b6bb152-f8c5-43ff-8492-615df9fab6f8\&quot; })" type="Planner.Tests.Controllers.Api.NotesControllerTests" method="PatchInvalidItemReturnsBadRequest" time="0.0028786" result="Pass" />
    </collection>
    <collection total="10" passed="10" failed="0" skipped="0" name="Test collection for Planner.Tests.Services.ScheduleItemServiceTests" time="1.914">
      <test name="Planner.Tests.Services.ScheduleItemServiceTests.AddNullItemThrowsException" type="Planner.Tests.Services.ScheduleItemServiceTests" method="AddNullItemThrowsException" time="0.8389964" result="Pass" />
      <test name="Planner.Tests.Services.ScheduleItemServiceTests.AddBadEventIdThrowsException" type="Planner.Tests.Services.ScheduleItemServiceTests" method="AddBadEventIdThrowsException" time="0.3024296" result="Pass" />
      <test name="Planner.Tests.Services.ScheduleItemServiceTests.DeleteWithInvalidIdDoesNotThrowError" type="Planner.Tests.Services.ScheduleItemServiceTests" method="DeleteWithInvalidIdDoesNotThrowError" time="0.4733434" result="Pass" />
      <test name="Planner.Tests.Services.ScheduleItemServiceTests.UpdateWithNullThrowsArgumentNullException" type="Planner.Tests.Services.ScheduleItemServiceTests" method="UpdateWithNullThrowsArgumentNullException" time="0.0025016" result="Pass" />
      <test name="Planner.Tests.Services.ScheduleItemServiceTests.AddInsertsItemIntoDatabase" type="Planner.Tests.Services.ScheduleItemServiceTests" method="AddInsertsItemIntoDatabase" time="0.2356991" result="Pass" />
      <test name="Planner.Tests.Services.ScheduleItemServiceTests.DeleteRemovesItemFromDatabase" type="Planner.Tests.Services.ScheduleItemServiceTests" method="DeleteRemovesItemFromDatabase" time="0.0095562" result="Pass" />
      <test name="Planner.Tests.Services.ScheduleItemServiceTests.GetReturnsItemFromDatabase" type="Planner.Tests.Services.ScheduleItemServiceTests" method="GetReturnsItemFromDatabase" time="0.011206" result="Pass" />
      <test name="Planner.Tests.Services.ScheduleItemServiceTests.GetWithInvalidIdReturnsNullDatabase" type="Planner.Tests.Services.ScheduleItemServiceTests" method="GetWithInvalidIdReturnsNullDatabase" time="0.0257933" result="Pass" />
      <test name="Planner.Tests.Services.ScheduleItemServiceTests.UpdateInvalidIdThrowsInvalidKey" type="Planner.Tests.Services.ScheduleItemServiceTests" method="UpdateInvalidIdThrowsInvalidKey" time="0.007271" result="Pass" />
      <test name="Planner.Tests.Services.ScheduleItemServiceTests.UpdatePassesChangeIntoDatbase" type="Planner.Tests.Services.ScheduleItemServiceTests" method="UpdatePassesChangeIntoDatbase" time="0.0069005" result="Pass" />
    </collection>
    <collection total="10" passed="10" failed="0" skipped="0" name="Test collection for Planner.Tests.Services.EventServiceTests" time="1.796">
      <test name="Planner.Tests.Services.EventServiceTests.UpdateInvalidIdThrowsInvalidKey" type="Planner.Tests.Services.EventServiceTests" method="UpdateInvalidIdThrowsInvalidKey" time="0.6666651" result="Pass" />
      <test name="Planner.Tests.Services.EventServiceTests.DeleteWithInvalidIdDoesNotThrowError" type="Planner.Tests.Services.EventServiceTests" method="DeleteWithInvalidIdDoesNotThrowError" time="0.3251916" result="Pass" />
      <test name="Planner.Tests.Services.EventServiceTests.AddInsertsEventIntoDatabase" type="Planner.Tests.Services.EventServiceTests" method="AddInsertsEventIntoDatabase" time="0.3987458" result="Pass" />
      <test name="Planner.Tests.Services.EventServiceTests.GetReturnsItemFromDatabase" type="Planner.Tests.Services.EventServiceTests" method="GetReturnsItemFromDatabase" time="0.16265" result="Pass" />
      <test name="Planner.Tests.Services.EventServiceTests.DeleteRemovesItemFromDatabase" type="Planner.Tests.Services.EventServiceTests" method="DeleteRemovesItemFromDatabase" time="0.0564231" result="Pass" />
      <test name="Planner.Tests.Services.EventServiceTests.AddNullEventThrowsException" type="Planner.Tests.Services.EventServiceTests" method="AddNullEventThrowsException" time="0.0017029" result="Pass" />
      <test name="Planner.Tests.Services.EventServiceTests.GetListAfterDateReturnsEvents" type="Planner.Tests.Services.EventServiceTests" method="GetListAfterDateReturnsEvents" time="0.1045968" result="Pass" />
      <test name="Planner.Tests.Services.EventServiceTests.UpdatePassesChangeIntoDatbase" type="Planner.Tests.Services.EventServiceTests" method="UpdatePassesChangeIntoDatbase" time="0.0484985" result="Pass" />
      <test name="Planner.Tests.Services.EventServiceTests.GetWithInvalidIdReturnsNullDatabase" type="Planner.Tests.Services.EventServiceTests" method="GetWithInvalidIdReturnsNullDatabase" time="0.0306592" result="Pass" />
      <test name="Planner.Tests.Services.EventServiceTests.UpdateWithNullThrowsArgumentNullException" type="Planner.Tests.Services.EventServiceTests" method="UpdateWithNullThrowsArgumentNullException" time="0.0006233" result="Pass" />
    </collection>
    <collection total="16" passed="16" failed="0" skipped="0" name="Test collection for Planner.Tests.Services.FlagServiceTests" time="0.365">
      <test name="Planner.Tests.Services.FlagServiceTests.GetFlagsDoesNotAddNeedsEmailingToDistantEvent" type="Planner.Tests.Services.FlagServiceTests" method="GetFlagsDoesNotAddNeedsEmailingToDistantEvent" time="0.0335887" result="Pass" />
      <test name="Planner.Tests.Services.FlagServiceTests.GetFlagsDoesNotAddBriefingNotesSentIfBriefingHasNotBeenSent" type="Planner.Tests.Services.FlagServiceTests" method="GetFlagsDoesNotAddBriefingNotesSentIfBriefingHasNotBeenSent" time="0.020138" result="Pass" />
      <test name="Planner.Tests.Services.FlagServiceTests.GetFlagsDoesNotAddUrgentCoverFlagToUnconfirmedEvent" type="Planner.Tests.Services.FlagServiceTests" method="GetFlagsDoesNotAddUrgentCoverFlagToUnconfirmedEvent" time="0.0209557" result="Pass" />
      <test name="Planner.Tests.Services.FlagServiceTests.GetFlagsDoesNotAddBriefingNotesReadyIfDescriptionIsBlank" type="Planner.Tests.Services.FlagServiceTests" method="GetFlagsDoesNotAddBriefingNotesReadyIfDescriptionIsBlank" time="0.0291016" result="Pass" />
      <test name="Planner.Tests.Services.FlagServiceTests.GetFlagsDoesNotAddBriefingNotesReadyIfExpectedIncidentsAreEmpty" type="Planner.Tests.Services.FlagServiceTests" method="GetFlagsDoesNotAddBriefingNotesReadyIfExpectedIncidentsAreEmpty" time="0.0159164" result="Pass" />
      <test name="Planner.Tests.Services.FlagServiceTests.GetFlagsDoesNotAddBriefingNotesReadyIfScheduleIsBlank" type="Planner.Tests.Services.FlagServiceTests" method="GetFlagsDoesNotAddBriefingNotesReadyIfScheduleIsBlank" time="0.030523" result="Pass" />
      <test name="Planner.Tests.Services.FlagServiceTests.GetFlagsDoesNotAddBriefingNotesReadyIfBriefingNotesAreSent" type="Planner.Tests.Services.FlagServiceTests" method="GetFlagsDoesNotAddBriefingNotesReadyIfBriefingNotesAreSent" time="0.0160038" result="Pass" />
      <test name="Planner.Tests.Services.FlagServiceTests.GetFlagsAddsNeedsEmailingToSoonEventNotRecentlyEmailed" type="Planner.Tests.Services.FlagServiceTests" method="GetFlagsAddsNeedsEmailingToSoonEventNotRecentlyEmailed" time="0.020021" result="Pass" />
      <test name="Planner.Tests.Services.FlagServiceTests.GetFlagsAddsBriefingNotesSentIfBriefingHasBeenSent" type="Planner.Tests.Services.FlagServiceTests" method="GetFlagsAddsBriefingNotesSentIfBriefingHasBeenSent" time="0.0143812" result="Pass" />
      <test name="Planner.Tests.Services.FlagServiceTests.GetFlagsDoesNotAddUrgentCoverFlagToCoveredEvent" type="Planner.Tests.Services.FlagServiceTests" method="GetFlagsDoesNotAddUrgentCoverFlagToCoveredEvent" time="0.0647053" result="Pass" />
      <test name="Planner.Tests.Services.FlagServiceTests.GetFlagsAddsUrgentCoverFlagToUrgentUncoveredConfirmedEvent" type="Planner.Tests.Services.FlagServiceTests" method="GetFlagsAddsUrgentCoverFlagToUrgentUncoveredConfirmedEvent" time="0.0147982" result="Pass" />
      <test name="Planner.Tests.Services.FlagServiceTests.GetFlagsAddsBriefingNotesReadyIfBriefingValidAndEventSoonAndNotesNotSent" type="Planner.Tests.Services.FlagServiceTests" method="GetFlagsAddsBriefingNotesReadyIfBriefingValidAndEventSoonAndNotesNotSent" time="0.0162878" result="Pass" />
      <test name="Planner.Tests.Services.FlagServiceTests.GetFlagsDoesNotAddNeedsEmailingToRecentlyEmailedEvent" type="Planner.Tests.Services.FlagServiceTests" method="GetFlagsDoesNotAddNeedsEmailingToRecentlyEmailedEvent" time="0.0177864" result="Pass" />
      <test name="Planner.Tests.Services.FlagServiceTests.GetFlagsDoesNotAddBriefingNotesReadyIfEventIsDistant" type="Planner.Tests.Services.FlagServiceTests" method="GetFlagsDoesNotAddBriefingNotesReadyIfEventIsDistant" time="0.0186441" result="Pass" />
      <test name="Planner.Tests.Services.FlagServiceTests.GetFlagsDoesNotAddUrgentCoverFlagToNonUrgentEvent" type="Planner.Tests.Services.FlagServiceTests" method="GetFlagsDoesNotAddUrgentCoverFlagToNonUrgentEvent" time="0.0150109" result="Pass" />
      <test name="Planner.Tests.Services.FlagServiceTests.GetFlagsDoesNotAddBriefingNotesReadyIfDeploymentsAreEmpty" type="Planner.Tests.Services.FlagServiceTests" method="GetFlagsDoesNotAddBriefingNotesReadyIfDeploymentsAreEmpty" time="0.0168899" result="Pass" />
    </collection>
    <collection total="9" passed="9" failed="0" skipped="0" name="Test collection for Planner.Tests.Controllers.Api.DeploymentsControllerTests" time="0.071">
      <test name="Planner.Tests.Controllers.Api.DeploymentsControllerTests.PostValidEventIdCallsServiceAndReturnsCreated(eventId: 238, createModel: DeploymentCreate { Callsign = \&quot;Callsignb12adb09-99af-4f8d-8b09-b5e7385d9e1c\&quot;, CyclingLevel = EntryLevel, Name = \&quot;Name6a887425-5528-4b1d-8ba8-2fdcc95a1533\&quot;, Qualification = AdvancedFirstAider, Team = 106 }, newId: 33)" type="Planner.Tests.Controllers.Api.DeploymentsControllerTests" method="PostValidEventIdCallsServiceAndReturnsCreated" time="0.024199" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.DeploymentsControllerTests.PostInvalidEventIdCallsServiceAndReturnsBadRequest(eventId: 124, createModel: DeploymentCreate { Callsign = \&quot;Callsign66022b62-02d9-4b20-b0f1-d05babcde6ec\&quot;, CyclingLevel = EntryLevel, Name = \&quot;Name6a588ae7-e9a8-477e-9fb8-cc87fe765626\&quot;, Qualification = AdvancedFirstAider, Team = 53 })" type="Planner.Tests.Controllers.Api.DeploymentsControllerTests" method="PostInvalidEventIdCallsServiceAndReturnsBadRequest" time="0.0026178" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.DeploymentsControllerTests.GetItemInvalidIdReturnsNotFound(id: 124)" type="Planner.Tests.Controllers.Api.DeploymentsControllerTests" method="GetItemInvalidIdReturnsNotFound" time="0.0119634" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.DeploymentsControllerTests.PostInvalidItemDoesNotCallServiceAndReturnsBadRequest(eventId: 83, createModel: DeploymentCreate { Callsign = \&quot;Callsignb8d541ed-6339-4faa-9f87-dfb3d4a3f63b\&quot;, CyclingLevel = EntryLevel, Name = \&quot;Name74846b3e-dfc1-4e44-a217-5e30d47b8ecc\&quot;, Qualification = AdvancedFirstAider, Team = 155 })" type="Planner.Tests.Controllers.Api.DeploymentsControllerTests" method="PostInvalidItemDoesNotCallServiceAndReturnsBadRequest" time="0.0002985" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.DeploymentsControllerTests.PatchInvalidItemIdReturnsNotFound(id: 83)" type="Planner.Tests.Controllers.Api.DeploymentsControllerTests" method="PatchInvalidItemIdReturnsNotFound" time="0.0030266" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.DeploymentsControllerTests.GetItemValidIdReturnsOk(id: 83, item: Deployment { Callsign = \&quot;Callsignacbec53f-5af7-43b0-acd1-01920b1d5e93\&quot;, CyclingLevel = EntryLevel, Id = 155, Name = \&quot;Namec71e455f-807d-45f8-9439-b91ef0c0110f\&quot;, Qualification = AdvancedFirstAider, ... })" type="Planner.Tests.Controllers.Api.DeploymentsControllerTests" method="GetItemValidIdReturnsOk" time="0.0103096" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.DeploymentsControllerTests.DeleteItemReturnsNoContent(id: 174)" type="Planner.Tests.Controllers.Api.DeploymentsControllerTests" method="DeleteItemReturnsNoContent" time="0.0033736" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.DeploymentsControllerTests.PatchValidItemReturnsUpdatedDetails(id: 174, model: Deployment { Callsign = \&quot;Callsign61eb4802-1a81-4fe6-9896-4139fdd27403\&quot;, CyclingLevel = EntryLevel, Id = 77, Name = \&quot;Name442f572a-1471-461a-af33-a173bd1634e7\&quot;, Qualification = AdvancedFirstAider, ... })" type="Planner.Tests.Controllers.Api.DeploymentsControllerTests" method="PatchValidItemReturnsUpdatedDetails" time="0.011475" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.DeploymentsControllerTests.PatchInvalidItemReturnsBadRequest(id: 10, model: Deployment { Callsign = \&quot;Callsign61e0fbb3-207e-4c1d-8d86-70419f10a4cc\&quot;, CyclingLevel = EntryLevel, Id = 255, Name = \&quot;Name0538f46f-9cd2-4380-9918-b1d3a1832d3e\&quot;, Qualification = AdvancedFirstAider, ... })" type="Planner.Tests.Controllers.Api.DeploymentsControllerTests" method="PatchInvalidItemReturnsBadRequest" time="0.0040159" result="Pass" />
    </collection>
    <collection total="9" passed="9" failed="0" skipped="0" name="Test collection for Planner.Tests.Controllers.Api.NoGoAreasControllerTests" time="0.054">
      <test name="Planner.Tests.Controllers.Api.NoGoAreasControllerTests.PatchInvalidItemIdReturnsNotFound(id: 224)" type="Planner.Tests.Controllers.Api.NoGoAreasControllerTests" method="PatchInvalidItemIdReturnsNotFound" time="0.0177147" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.NoGoAreasControllerTests.GetItemInvalidIdReturnsNotFound(id: 60)" type="Planner.Tests.Controllers.Api.NoGoAreasControllerTests" method="GetItemInvalidIdReturnsNotFound" time="0.003003" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.NoGoAreasControllerTests.PostValidEventIdCallsServiceAndReturnsCreated(eventId: 60, createModel: NoGoAreaCreate { Name = \&quot;Nameb2417a84-90ca-4665-9f1a-f25ccee80c49\&quot; }, newId: 24)" type="Planner.Tests.Controllers.Api.NoGoAreasControllerTests" method="PostValidEventIdCallsServiceAndReturnsCreated" time="0.0150602" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.NoGoAreasControllerTests.DeleteItemReturnsNoContent(id: 110)" type="Planner.Tests.Controllers.Api.NoGoAreasControllerTests" method="DeleteItemReturnsNoContent" time="0.0032968" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.NoGoAreasControllerTests.PatchInvalidItemReturnsBadRequest(id: 110, model: NoGoArea { Id = 49, Name = \&quot;Namef0cb3fc7-d293-424b-a3de-9da7a7adfdf2\&quot; })" type="Planner.Tests.Controllers.Api.NoGoAreasControllerTests" method="PatchInvalidItemReturnsBadRequest" time="0.004042" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.NoGoAreasControllerTests.PatchValidItemReturnsUpdatedDetails(id: 110, model: NoGoArea { Id = 49, Name = \&quot;Name939c384c-24ec-496c-a1ba-e2d0b7331c54\&quot; })" type="Planner.Tests.Controllers.Api.NoGoAreasControllerTests" method="PatchValidItemReturnsUpdatedDetails" time="0.0066114" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.NoGoAreasControllerTests.PostInvalidItemDoesNotCallServiceAndReturnsBadRequest(eventId: 202, createModel: NoGoAreaCreate { Name = \&quot;Name2318c233-2f6c-4ef0-af49-5daee312cc09\&quot; })" type="Planner.Tests.Controllers.Api.NoGoAreasControllerTests" method="PostInvalidItemDoesNotCallServiceAndReturnsBadRequest" time="0.0003059" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.NoGoAreasControllerTests.GetItemValidIdReturnsOk(id: 202, item: NoGoArea { Id = 226, Name = \&quot;Name960d3875-afc1-4a79-bf44-6b1e31f3d852\&quot; })" type="Planner.Tests.Controllers.Api.NoGoAreasControllerTests" method="GetItemValidIdReturnsOk" time="0.0017505" result="Pass" />
      <test name="Planner.Tests.Controllers.Api.NoGoAreasControllerTests.PostInvalidEventIdCallsServiceAndReturnsBadRequest(eventId: 202, createModel: NoGoAreaCreate { Name = \&quot;Named23046e7-e5fc-4ea0-88e7-d83a49bee799\&quot; })" type="Planner.Tests.Controllers.Api.NoGoAreasControllerTests" method="PostInvalidEventIdCallsServiceAndReturnsBadRequest" time="0.0024146" result="Pass" />
    </collection>
    <collection total="10" passed="10" failed="0" skipped="0" name="Test collection for Planner.Tests.Services.DeploymentServiceTests" time="0.403">
      <test name="Planner.Tests.Services.DeploymentServiceTests.DeleteRemovesItemFromDatabase" type="Planner.Tests.Services.DeploymentServiceTests" method="DeleteRemovesItemFromDatabase" time="0.0787305" result="Pass" />
      <test name="Planner.Tests.Services.DeploymentServiceTests.DeleteWithInvalidIdDoesNotThrowError" type="Planner.Tests.Services.DeploymentServiceTests" method="DeleteWithInvalidIdDoesNotThrowError" time="0.080769" result="Pass" />
      <test name="Planner.Tests.Services.DeploymentServiceTests.AddBadEventIdThrowsException" type="Planner.Tests.Services.DeploymentServiceTests" method="AddBadEventIdThrowsException" time="0.0067934" result="Pass" />
      <test name="Planner.Tests.Services.DeploymentServiceTests.AddInsertsItemIntoDatabase" type="Planner.Tests.Services.DeploymentServiceTests" method="AddInsertsItemIntoDatabase" time="0.0897472" result="Pass" />
      <test name="Planner.Tests.Services.DeploymentServiceTests.UpdateWithNullThrowsArgumentNullException" type="Planner.Tests.Services.DeploymentServiceTests" method="UpdateWithNullThrowsArgumentNullException" time="0.0007522" result="Pass" />
      <test name="Planner.Tests.Services.DeploymentServiceTests.GetReturnsItemFromDatabase" type="Planner.Tests.Services.DeploymentServiceTests" method="GetReturnsItemFromDatabase" time="0.0357958" result="Pass" />
      <test name="Planner.Tests.Services.DeploymentServiceTests.UpdateInvalidIdThrowsInvalidKey" type="Planner.Tests.Services.DeploymentServiceTests" method="UpdateInvalidIdThrowsInvalidKey" time="0.0097353" result="Pass" />
      <test name="Planner.Tests.Services.DeploymentServiceTests.AddNullItemThrowsException" type="Planner.Tests.Services.DeploymentServiceTests" method="AddNullItemThrowsException" time="0.0172393" result="Pass" />
      <test name="Planner.Tests.Services.DeploymentServiceTests.GetWithInvalidIdReturnsNullDatabase" type="Planner.Tests.Services.DeploymentServiceTests" method="GetWithInvalidIdReturnsNullDatabase" time="0.0680021" result="Pass" />
      <test name="Planner.Tests.Services.DeploymentServiceTests.UpdatePassesChangeIntoDatbase" type="Planner.Tests.Services.DeploymentServiceTests" method="UpdatePassesChangeIntoDatbase" time="0.0157939" result="Pass" />
    </collection>
  </assembly>
</assemblies>
